{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sarvesh./git/React application/LoginSystem/src/LoginForm.js\";\nimport React from 'react';\nimport InputField from './Inputfield';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './stores/UserStore';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 12) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch('/login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedin = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [\"Log In\", /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username ? this.state.username : '',\n        onChange: val => this.setInputValue('username', val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/sarvesh./git/React application/LoginSystem/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStore","LoginForm","Component","constructor","props","state","username","password","buttonDisabled","setInputValue","property","val","trim","length","setState","doLogin","res","fetch","method","headers","body","JSON","stringify","result","json","success","isLoggedin","resetForm","alert","msg","e","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAGA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,QAAQ,EAAE,EADF;AAERC,MAAAA,QAAQ,EAAE,EAFF;AAGRC,MAAAA,cAAc,EAAE;AAHR,KAAZ;AAKH;;AACDC,EAAAA,aAAa,CAACC,QAAD,EAAUC,GAAV,EAAc;AACvBA,IAAAA,GAAG,GAACA,GAAG,CAACC,IAAJ,EAAJ;;AACA,QAAGD,GAAG,CAACE,MAAJ,GAAa,EAAhB,EAAmB;AACf;AACH;;AACD,SAAKC,QAAL,CAAc;AACV,OAACJ,QAAD,GAAYC;AADF,KAAd;AAGH;;AAED,QAAMI,OAAN,GAAe;AACX,QAAG,CAAC,KAAKV,KAAL,CAAWC,QAAf,EAAwB;AACpB;AACH;;AACD,QAAG,CAAC,KAAKD,KAAL,CAAWE,QAAf,EAAwB;AACpB;AACH;;AACD,SAAKO,QAAL,CAAc;AACVN,MAAAA,cAAc,EAAE;AADN,KAAd;;AAGA,QAAG;AACC,UAAIQ,GAAG,GAAC,MAAMC,KAAK,CAAC,QAAD,EAAU;AACzBC,QAAAA,MAAM,EAAE,MADiB;AAEzBC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAFgB;AAMzBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBhB,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADJ;AAEjBC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFJ,SAAf;AANmB,OAAV,CAAnB;AAWA,UAAIgB,MAAM,GAAC,MAAMP,GAAG,CAACQ,IAAJ,EAAjB;;AACA,UAAID,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA6B;AACzBzB,QAAAA,SAAS,CAAC0B,UAAV,GAAqB,IAArB;AACA1B,QAAAA,SAAS,CAACM,QAAV,GAAmBiB,MAAM,CAACjB,QAA1B;AACH,OAHD,MAIK,IAAIiB,MAAM,IAAIA,MAAM,CAACE,OAAP,KAAmB,KAAjC,EAAwC;AACzC,aAAKE,SAAL;AACAC,QAAAA,KAAK,CAACL,MAAM,CAACM,GAAR,CAAL;AACH;AAEJ,KAtBD,CAuBJ,OAAMC,CAAN,EAAQ;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAKH,SAAL;AACH;AACJ;;AAEGM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,wCAEI,QAAC,UAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,UAFhB;AAGI,QAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWC,QAAX,GAAsB,KAAKD,KAAL,CAAWC,QAAjC,GAA2C,EAHtD;AAII,QAAA,QAAQ,EAAGK,GAAD,IACV,KAAKF,aAAL,CAAmB,UAAnB,EAA+BE,GAA/B;AALJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAxEkC;;AA2EvC,eAAeV,SAAf","sourcesContent":["import React from 'react';\nimport InputField from './Inputfield';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './stores/UserStore';\n\n\nclass LoginForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            username: '',\n            password: '',\n            buttonDisabled: false\n        }\n    }\n    setInputValue(property,val){\n        val=val.trim();\n        if(val.length > 12){\n            return;\n        }\n        this.setState({\n            [property]: val\n        })\n    }\n\n    async doLogin(){\n        if(!this.state.username){\n            return;\n        }\n        if(!this.state.password){\n            return;\n        }\n        this.setState({\n            buttonDisabled: true\n        })\n        try{\n            let res=await fetch('/login',{\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                })\n            });\n            let result=await res.json();\n            if (result && result.success){\n                UserStore.isLoggedin=true;\n                UserStore.username=result.username;\n            }\n            else if (result && result.success === false) {\n                this.resetForm();\n                alert(result.msg);\n            }\n\n        }\n    catch(e){\n        console.log(e);\n        this.resetForm();\n    }\n}\n\n    render() {\n        return (\n            <div className=\"loginForm\">\n                Log In\n                <InputField\n                    type='text'\n                    placeholder='Username'\n                    value={this.state.username ? this.state.username: ''}\n                    onChange={(val) => \n                    this.setInputValue('username', val)\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}