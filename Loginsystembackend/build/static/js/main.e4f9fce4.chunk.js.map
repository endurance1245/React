{"version":3,"sources":["stores/UserStore.js","Inputfield.js","SubmitButton.js","LoginForm.js","App.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","myChange","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4f9fce4.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\n\n/**\n * UserStore\n */\n\n class UserStore{\n     constructor() {\n         extendObservable(this, {\n\n             loading: true,\n             isLoggedIn: false,\n             username: ''\n         })\n     }\n }\n\n export default new UserStore();","import React from 'react';\n\nclass InputField extends React.Component{\n    render() {\n        return (\n            <div className=\"inputField\">\n                <input \n                    className='input'\n                    type={this.props.type}\n                    placeholder= {this.props.placeholder}\n                    value={this.props.value}\n                    onChange={(e) => this.props.myChange(e.target.value)}\n                />\n            </div>\n        );\n    }\n}\n\nexport default InputField;","import React from 'react';\n\nclass SubmitButton extends React.Component{\n    render() {\n        return (\n            <div className=\"submitButton\">\n                <button\n                 className='btn'\n                 disabled={this.props.disabled}\n                 onClick={ () => this.props.onClick() }\n                 >\n                 {this.props.text}\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default SubmitButton;","import React from 'react';\nimport InputField from './Inputfield';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './stores/UserStore';\n\nclass LoginForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            username: '',\n            password: '',\n            buttonDisabled: false\n        }\n    }\n    setInputValue(property,val){\n        val=val.trim();\n        if(val.length > 12){\n            return;\n        }\n        this.setState({\n            [property]: val\n        })\n    }\n\n    resetForm(){\n        this.setState({\n            username: '',\n            password: '',\n            buttonDisabled: false\n        })\n    }\n\n    async doLogin(){\n        if(!this.state.username){\n            return;\n        }\n        if(!this.state.password){\n            return;\n        }\n        this.setState({\n            buttonDisabled: true\n        })\n\n        try{\n            let res= await fetch('/login',{\n                method: 'post',\n                headers:{\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                })\n            });\n\n            let result=await res.json();\n            if(result && result.success) {\n                UserStore.isLoggedIn = true;\n                UserStore.username = result.username;\n\n            }\n\n            else if (result && result.success === false){\n                this.resetForm();\n                alert(result.msg);\n            }\n\n        }\n\n        catch(e){\n            console.log(e);\n            this.resetForm();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"loginForm\">\n                Log In\n                <InputField\n                    type='text'\n                    placeholder='Username'\n                    value={this.state.username ? this.state.username: ''}\n                    myChange={(val) => this.setInputValue('username', val)}\n                />\n\n                <InputField\n                    type='password'\n                    placeholder='Password'\n                    value={this.state.password ? this.state.password: ''}\n                    myChange={(val) => this.setInputValue('password', val)}\n                />  \n                \n                <SubmitButton\n                    text='Login'\n                    disabled={this.state.buttonDisabled}\n                    onClick={() => this.doLogin()}\n                />\n            </div>\n        );\n    }\n}\nexport default LoginForm;","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component{\n    async componentDidMount(){\n        try {\n            let res=await fetch('/isLoggedIn',{\n                method:'post',\n                headers:{\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n            let result = await res.json();\n            if (result && result.success){\n                UserStore.loading=false;\n                UserStore.isLoggedIn=true;\n                UserStore.username=result.username;\n            }\n            else{\n                UserStore.loading=false;\n                UserStore.isLoggedIn=false;\n            }\n        }\n        catch(e){\n            UserStore.loading=false;\n            UserStore.isLoggedIn=false;\n        }\n    }\n\n    async doLogout(){\n        try {\n            let res=await fetch('/logout',{\n                method:'post',\n                headers:{\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n            let result = await res.json();\n            if (result && result.success){\n                UserStore.isLoggedIn=false;\n                UserStore.username='';\n            }\n        }\n        catch(e){\n            console.log(e);\n        }\n    }\n\n    render() {\n        if (UserStore.loading){\n            return (\n                <div className=\"app\">\n                    <div className='container'>\n                        Loading, please wait..\n                    </div>\n                </div>\n            );  \n        }\n        else{\n            if(UserStore.isLoggedIn){\n            return (\n                <div className=\"app\">\n                    <div className='container'>\n                        Welcome {UserStore.username}\n                        <SubmitButton\n                            text={'Log out'}\n                            disabled={false}\n                            onClick={ () => this.doLogout() }\n                        />\n\n                    </div>\n                </div>\n                );                  \n            }\n        return (\n            <div className=\"app\">\n                <div className='container'>\n                    <LoginForm/>\n                </div>\n            </div>\n            );\n        }\n    }\n}\n\nexport default observer(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n<App />,document.getElementById(\"root\")\n);\n"],"sourceRoot":""}